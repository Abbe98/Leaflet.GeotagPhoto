!function(e){"use strict";function t(e){if(Array.isArray(e)&&"number"==typeof e[0]&&"number"==typeof e[1])return e;if(e){if("Feature"===e.type&&e.geometry&&"Point"===e.geometry.type&&Array.isArray(e.geometry.coordinates))return e.geometry.coordinates;if("Point"===e.type&&Array.isArray(e.coordinates))return e.coordinates}throw new Error("A coordinate, feature, or point geometry is required")}function r(e,t,r){if(!t||!r)throw new Error("type and name required");if(!e||e.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.type)}function n(e,t,r){if(!r)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!e.geometry||e.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.geometry.type)}function o(e,t,r){if(!r)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+r+", FeatureCollection required");for(var n=0;n<e.features.length;n++){var o=e.features[n];if(!o||"Feature"!==o.type||!o.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!o.geometry||o.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+o.geometry.type)}}function i(e,t){return{type:"Feature",properties:t||{},geometry:e}}function a(e,t,r){var n,o,i,s,g,h,c,u,l,m,f=0,p="FeatureCollection"===e.type,d="Feature"===e.type,y=p?e.features.length:1;for(n=0;n<y;n++)for(l=p?e.features[n].geometry:d?e.geometry:e,m="GeometryCollection"===l.type,c=m?l.geometries.length:1,s=0;s<c;s++)if(h=m?l.geometries[s]:l,u=h.coordinates,f=!r||"Polygon"!==h.type&&"MultiPolygon"!==h.type?0:1,"Point"===h.type)t(u);else if("LineString"===h.type||"MultiPoint"===h.type)for(o=0;o<u.length;o++)t(u[o]);else if("Polygon"===h.type||"MultiLineString"===h.type)for(o=0;o<u.length;o++)for(i=0;i<u[o].length-f;i++)t(u[o][i]);else if("MultiPolygon"===h.type)for(o=0;o<u.length;o++)for(i=0;i<u[o].length;i++)for(g=0;g<u[o][i].length-f;g++)t(u[o][i][g]);else{if("GeometryCollection"!==h.type)throw new Error("Unknown Geometry Type");for(o=0;o<h.geometries.length;o++)a(h.geometries[o],t,r)}}function s(e,t,r,n){return a(e,function(e){r=t(r,e)},n),r}function g(e,t){var r;switch(e.type){case"FeatureCollection":for(r=0;r<e.features.length;r++)t(e.features[r].properties,r);break;case"Feature":t(e.properties,0)}}function h(e,t,r){return g(e,function(e,n){r=t(r,e,n)}),r}function c(e,t){if("Feature"===e.type)t(e,0);else if("FeatureCollection"===e.type)for(var r=0;r<e.features.length;r++)t(e.features[r],r)}function u(e){var t=[];return a(e,function(e){t.push(e)}),t}function l(e,t){var r,n,o,i,a,s,g,h="FeatureCollection"===e.type,c="Feature"===e.type,u=h?e.features.length:1;for(r=0;r<u;r++)for(s=h?e.features[r].geometry:c?e.geometry:e,g="GeometryCollection"===s.type,a=g?s.geometries.length:1,o=0;o<a;o++)if(i=g?s.geometries[o]:s,"Point"===i.type||"LineString"===i.type||"MultiPoint"===i.type||"Polygon"===i.type||"MultiLineString"===i.type||"MultiPolygon"===i.type)t(i);else{if("GeometryCollection"!==i.type)throw new Error("Unknown Geometry Type");for(n=0;n<i.geometries.length;n++)t(i.geometries[n])}}function m(e){var t=e*Math.PI/180;return Math.tan(t)}function f(e){var t=e*Math.PI/180;return Math.cos(t)}function p(e,t){var r=e.properties;return t.nested&&(r=r[t.nested]?r[t.nested]:{}),r}function d(e,t){var r=p(e,t),n=r.angle||t.angle,o=e.geometry.type;if(void 0===n)throw new Error("feature must include angle property, or global angle option must be set");if("LineString"===o){if(2===e.geometry.coordinates.length)return e;throw new Error("only accepts only accepts LineStrings with two points")}if("GeometryCollection"===o){if(2===e.geometry.geometries.length&&"Point"===e.geometry.geometries[0].type&&"Point"===e.geometry.geometries[1].type)return e;throw new Error("only accepts GeometryCollections containing two Points")}if("Point"===o){if(void 0!==r.bearing&&void 0!==r.distance)return e;throw new Error("only accepts single Points with distance and bearing properties")}throw new Error("only accepts LineStrings with two points, GeometryCollections \ncontaining two Points, or single Points with distance and bearing properties")}function y(e,t){var r=e.geometry.type;return"Point"===r?_(e,t):"LineString"===r?w(e,t):"GeometryCollection"===r?M(e,t):void 0}function _(e,t){var r=p(e,t),n=r.distance,o=r.angle||t.angle,i=j(e,n,r.bearing,he),a=m(o/2)*n,s=[j(i,a,r.bearing+90,he),j(i,-a,r.bearing+90,he)];return{type:"Feature",properties:e.properties,geometry:{type:"GeometryCollection",geometries:[e.geometry,{type:"LineString",coordinates:[s[0].geometry.coordinates,s[1].geometry.coordinates]}]}}}function w(e,t){var r=p(e,t),n=r.angle||t.angle,o=ne(e),i=e.geometry.coordinates.map(function(e){return{type:"Feature",geometry:{type:"Point",coordinates:e}}}),a=ge(i[0],o,he),s=ie(i[0],i[1]),g=a/m(n/2),h=j(o,g,s+90,he);return{type:"Feature",properties:e.properties,geometry:{type:"GeometryCollection",geometries:[h.geometry,e.geometry]}}}function M(e,t){var r=p(e,t),n=r.angle||t.angle,o=e.geometry.geometries[0],i=e.geometry.geometries[1],a=ge(o,i,he),s=ie(o,i),g=a/f(n/2),h=j(o,g,s+n/2,he),c=j(o,g,s-n/2,he);return{type:"Feature",properties:Object.assign(e.properties,{bearing:s,distance:a}),geometry:{type:"GeometryCollection",geometries:[o,{type:"LineString",coordinates:[h.geometry.coordinates,c.geometry.coordinates]}]}}}function v(e,t){return t=t||{},e=d(e,t),y(e,t)}e="default"in e?e.default:e;var L=e.Evented.extend({options:{element:'<img src="../images/crosshair.svg" width="100px" />'},addTo:function(t){this._map=t;var r=t.getContainer();return this._element=e.DomUtil.create("div","leaflet-geotag-photo-crosshair",r),this._element.innerHTML=this.options.element,this._boundOnInput=this._onInput.bind(this),this._boundOnChange=this._onChange.bind(this),this._map.on("move",this._boundOnInput),this._map.on("moveend",this._boundOnChange),this},removeFrom:function(e){return this._map&&this._boundOnInput&&this._boundOnChange&&(this._map.off("move",this._boundOnInput),this._map.off("moveend",this._boundOnChange)),this},_onInput:function(){this.fire("input")},_onChange:function(){this.fire("change")},getCrosshairLatLng:function(){return this._map.getCenter()},getCrosshairPoint:function(){if(this._map){var e=this.getCrosshairLatLng();return{type:"Point",coordinates:[e.lng,e.lat]}}}}),C=r,P=o,k=n,b=t,E={geojsonType:C,collectionOf:P,featureOf:k,getCoord:b},F=i,O=function(e,t){if(!Array.isArray(e))throw new Error("Coordinates must be an array");if(e.length<2)throw new Error("Coordinates must be at least 2 numbers long");return i({type:"Point",coordinates:e.slice()},t)},D=function(e,t){if(!e)throw new Error("No coordinates passed");for(var r=0;r<e.length;r++){var n=e[r];if(n.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var o=0;o<n[n.length-1].length;o++)if(n[n.length-1][o]!==n[0][o])throw new Error("First and last Position are not equivalent.")}return i({type:"Polygon",coordinates:e},t)},T=function(e,t){if(!e)throw new Error("No coordinates passed");return i({type:"LineString",coordinates:e},t)},I=function(e){return{type:"FeatureCollection",features:e}},A=function(e,t){if(!e)throw new Error("No coordinates passed");return i({type:"MultiLineString",coordinates:e},t)},V=function(e,t){if(!e)throw new Error("No coordinates passed");return i({type:"MultiPoint",coordinates:e},t)},G=function(e,t){if(!e)throw new Error("No coordinates passed");return i({type:"MultiPolygon",coordinates:e},t)},S=function(e,t){return i({type:"GeometryCollection",geometries:e},t)},B={miles:3960,nauticalmiles:3441.145,degrees:57.2957795,radians:1,inches:250905600,yards:6969600,meters:6373e3,metres:6373e3,kilometers:6373,kilometres:6373,feet:20908792.65},K=function(e,t){var r=B[t||"kilometers"];if(void 0===r)throw new Error("Invalid unit");return e*r},R=function(e,t){var r=B[t||"kilometers"];if(void 0===r)throw new Error("Invalid unit");return e/r},U=function(e,t){var r=B[t||"kilometers"];if(void 0===r)throw new Error("Invalid unit");return e/r*57.2958},q={feature:F,point:O,polygon:D,lineString:T,featureCollection:I,multiLineString:A,multiPoint:V,multiPolygon:G,geometryCollection:S,radiansToDistance:K,distanceToRadians:R,distanceToDegrees:U},N=E.getCoord,J=q,z=J.point,x=J.distanceToRadians,j=function(e,t,r,n){var o=Math.PI/180,i=180/Math.PI,a=N(e),s=o*a[0],g=o*a[1],h=o*r,c=x(t,n),u=Math.asin(Math.sin(g)*Math.cos(c)+Math.cos(g)*Math.sin(c)*Math.cos(h)),l=s+Math.atan2(Math.sin(h)*Math.sin(c)*Math.cos(g),Math.cos(c)-Math.sin(g)*Math.sin(u));return z([i*l,i*u])},H=a,Q=s,W=g,X=h,Y=c,Z=u,$=l,ee={coordEach:H,coordReduce:Q,propEach:W,propReduce:X,featureEach:Y,coordAll:Z,geomEach:$},te=ee.coordEach,re=q.point,ne=function(e){var t=0,r=0,n=0;return te(e,function(e){t+=e[0],r+=e[1],n++},!0),re([t/n,r/n])},oe=E.getCoord,ie=function(e,t){var r=Math.PI/180,n=180/Math.PI,o=oe(e),i=oe(t),a=r*o[0],s=r*i[0],g=r*o[1],h=r*i[1],c=Math.sin(s-a)*Math.cos(h),u=Math.cos(g)*Math.sin(h)-Math.sin(g)*Math.cos(h)*Math.cos(s-a),l=n*Math.atan2(c,u);return l},ae=E.getCoord,se=q.radiansToDistance,ge=function(e,t,r){var n=Math.PI/180,o=ae(e),i=ae(t),a=n*(i[1]-o[1]),s=n*(i[0]-o[0]),g=n*o[1],h=n*i[1],c=Math.pow(Math.sin(a/2),2)+Math.pow(Math.sin(s/2),2)*Math.cos(g)*Math.cos(h);return se(2*Math.atan2(Math.sqrt(c),Math.sqrt(1-c)),r)},he="meters",ce=e.Control.extend({options:{position:"topleft"},initialize:function(e){this._geotagPhotoCamera=e},onAdd:function(t){this._map=t;var r="leaflet-control-geotag-photo-",n=e.DomUtil.create("div",r+" leaflet-bar"),o='<img src="../images/camera-icon.svg" />',i='<img src="../images/crosshair-icon.svg" />';return this._cameraButton=this._createButton(o,"Move camera back to map (C)",r+"camera",n,this._centerCamera),this._crosshairButton=this._createButton(i,"Move map back to camera (M)",r+"crosshair",n,this._centerMap),this._boundMapKeyPress=this._mapKeyPress.bind(this),this._map.on("keypress",this._boundMapKeyPress),n},_createButton:function(t,r,n,o,i){var a=e.DomUtil.create("a",n,o);return a.innerHTML=t,a.href="#",a.title=r,a.setAttribute("role","button"),a.setAttribute("aria-label",r),e.DomEvent.on(a,"mousedown dblclick",e.DomEvent.stopPropagation).on(a,"click",e.DomEvent.stop).on(a,"click",i,this).on(a,"click",this._refocusOnMap,this),a},onRemove:function(t){e.DomUtil.remove(this._element),t.off("keypress",this._boundMapKeyPress)},_mapKeyPress:function(e){99===e.originalEvent.charCode?this._centerCamera():109===e.originalEvent.charCode&&this._centerMap()},_centerCamera:function(){this._map&&this._geotagPhotoCamera&&this._geotagPhotoCamera.fitBounds(this._map.getBounds())},_centerMap:function(){this._map&&this._geotagPhotoCamera&&this._map.fitBounds(this._geotagPhotoCamera.getBounds())}});e.geotagPhotoCameraControl=function(e){return new ce(e)};var ue=e.FeatureGroup.extend({options:{},initialize:function(t,r){e.Util.setOptions(this,r),this._fieldOfView=v(t),this._angle=this._fieldOfView.properties.angle,this._targetMarker=null,this._cameraMarker=null,this._polygon=null,this._polyline=null,this._createLayers(),e.LayerGroup.prototype.initialize.call(this,[this._targetMarker,this._cameraMarker,this._polyline,this._polygon])},_createLayers:function(){var t="../images/camera.svg",r="../images/target.svg";this._cameraIcon=e.icon({iconUrl:t,iconSize:[38,38],iconAnchor:[19,19]}),this._targetIcon=e.icon({iconUrl:r,iconSize:[180,32],iconAnchor:[90,16]});var n=this._getPointList(this._fieldOfView),o=this._getCameraFromPointList(n),i=this._getTargetFromPointList(n);this._polyline=e.polyline(n,{color:"black",opacity:.5,weight:2,dashArray:"5, 7",lineCap:"round",lineJoin:"round"}),this._polygon=e.polygon(n,{weight:0,className:"field-of-view"}),this._control=e.geotagPhotoCameraControl(this),this._cameraMarker=e.marker(o,{icon:this._cameraIcon,draggable:!0}).on("drag",this._onMarkerDrag,this).on("dragend",this._onMarkerDragEnd,this),this._targetMarker=e.marker(i,{icon:this._targetIcon,draggable:!0}).on("drag",this._onMarkerDrag,this).on("dragend",this._onMarkerDragEnd,this);var a=this._updateMarkerBearings.bind(this),s=function(t){var r=e.Marker.prototype._setPos;r.call(this,t),a()};this._cameraMarker._setPos=this._targetMarker._setPos=s},addTo:function(t){return this._map=t,e.FeatureGroup.prototype.addTo.call(this,t),this._control.addTo(t),this._boundOnDocumentKeyDown=this._onDocumentKeyDown.bind(this),document.addEventListener("keydown",this._boundOnDocumentKeyDown),this},removeFrom:function(t){return e.FeatureGroup.prototype.removeFrom.call(this,t),this._boundOnDocumentKeyDown&&document.removeEventListener("keydown",this._boundOnDocumentKeyDown),this},_getPointList:function(e){return[[e.geometry.geometries[1].coordinates[0][1],e.geometry.geometries[1].coordinates[0][0]],[e.geometry.geometries[0].coordinates[1],e.geometry.geometries[0].coordinates[0]],[e.geometry.geometries[1].coordinates[1][1],e.geometry.geometries[1].coordinates[1][0]]]},_getCameraFromPointList:function(e){return[(e[0][0]+e[2][0])/2,(e[0][1]+e[2][1])/2]},_getTargetFromPointList:function(e){return e[1]},_addRotateTransform:function(t,r){if(t){var n=t.style[e.DomUtil.TRANSFORM],o="rotate("+r+")";t.style.transformOrigin="center center",n.includes("rotate")?t.style[e.DomUtil.TRANSFORM]=n.replace(/rotate\(.*?\)/,o):t.style[e.DomUtil.TRANSFORM]=n+" "+o}},_updateMarkerBearings:function(e){e=e||this._fieldOfView;var t=e.properties.bearing;this._addRotateTransform(this._cameraMarker._icon,t+"deg"),this._addRotateTransform(this._targetMarker._icon,t+"deg")},_drawFieldOfView:function(e){e=e||this._fieldOfView;var t=this._getPointList(e);this._polyline.setLatLngs(t),this._polygon.setLatLngs(t)},_updateFieldOfView:function(){if(this._cameraMarker&&this._targetMarker){var e=this._angle,t=this._cameraMarker.getLatLng(),r=this._targetMarker.getLatLng(),n={type:"Feature",properties:{angle:e},geometry:{type:"GeometryCollection",geometries:[this._geoJsonPoint(t),this._geoJsonPoint(r)]}};this._fieldOfView=v(n),this._updateMarkerBearings(this._fieldOfView),this._drawFieldOfView(this._fieldOfView)}},_onMarkerDrag:function(e){this._updateFieldOfView(),this.fire("input")},_onMarkerDragEnd:function(e){this.fire("change")},_moveMarker:function(e,t){var r=this._map.latLngToContainerPoint(e.getLatLng());r=r.add(t);var n=this._map.containerPointToLatLng(r);e.setLatLng(n),this._updateFieldOfView(),this.fire("input")},_onMarkerKeyDown:function(t,r){var n=20;r.shiftKey&&(n*=4),37===r.keyCode?this._moveMarker(t,e.point(-n,0)):38===r.keyCode?this._moveMarker(t,e.point(0,-n)):39===r.keyCode?this._moveMarker(t,e.point(n,0)):40===r.keyCode&&this._moveMarker(t,e.point(0,n))},_onDocumentKeyDown:function(e){document.activeElement===this._cameraMarker._icon?this._onMarkerKeyDown(this._cameraMarker,e):document.activeElement===this._targetMarker._icon&&this._onMarkerKeyDown(this._targetMarker,e)},_geoJsonPoint:function(e){return{type:"Point",coordinates:[e.lng,e.lat]}},getFieldOfView:function(){return this._fieldOfView},getCameraLatLng:function(){return this._cameraMarker.getLatLng()},getTargetLatLng:function(){return this._targetMarker.getLatLng()},getCameraPoint:function(){return this._geoJsonPoint(this.getCameraLatLng())},getTargetPoint:function(){return this._geoJsonPoint(this.getTargetLatLng())},getCenter:function(){return e.latLngBounds([this.getCameraLatLng(),this.getTargetLatLng()]).getCenter()},fitBounds:function(e){var t=this.getBounds();if(!e.contains(t)){var r=this.getCenter(),n=this.getCameraLatLng(),o=this.getTargetLatLng(),i=e.getCenter(),a=[i.lat-(r.lat-n.lat),i.lng-(r.lng-n.lng)],s=[i.lat-(r.lat-o.lat),i.lng-(r.lng-o.lng)];this.setCameraAndTargetLatLng(a,s)}},setCameraLatLng:function(e){this._cameraMarker&&(this._cameraMarker.setLatLng(e),this._updateFieldOfView(),this.fire("change"))},setTargetLatLng:function(e){this._targetMarker&&(this._targetMarker.setLatLng(e),this._updateFieldOfView(),this.fire("change"))},setCameraAndTargetLatLng:function(e,t){this._cameraMarker&&this._targetMarker&&(this._cameraMarker.setLatLng(e),this._targetMarker.setLatLng(t),this._updateFieldOfView(),this.fire("change"))},getBounds:function(){if(this._fieldOfView){var t=this._getPointList(this._fieldOfView);return e.latLngBounds(t)}},setAngle:function(e){this._angle=e,this._updateFieldOfView()}});e.geotagPhoto=function(e,t,r){if("crosshair"===e)return r=t,new L(r);if("camera"===e)return new ue(t,r);throw new Error("type must be either crosshair or camera")}}(L);
